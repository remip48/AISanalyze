% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/04a_AISextract.R
\name{AISextract}
\alias{AISextract}
\title{Extract the AIS position for desired location and times}
\usage{
AISextract(
  data,
  ais_data,
  search_into_radius_m = 50000,
  duplicate_time = F,
  max_time_diff = 0,
  t_gap = 10 * 60,
  accelerate = F,
  average_at = 0
)
}
\arguments{
\item{data}{Data of interest for the extraction of AIS. Must contain a column: timestamp (number of seconds since January 1, 1970 (the Unix epoch): see https://r-lang.com/how-to-convert-date-to-numeric-format-in-r/ for transformation), and the columns lon (longitude) & lat (latitude). timestamp, lon and lat must be numeric.}

\item{ais_data}{AIS data. Must contain a column: timestamp (number of seconds since January 1, 1970 (the Unix epoch): see https://r-lang.com/how-to-convert-date-to-numeric-format-in-r/ for transformation), and the columns lon (longitude), lat (latitude) and mmsi (Maritime mobile service identity). timestamp, lon and lat must be numeric. The mmsi column is the identifier for the vessels, the values can be replaced by the IMO or another identifier, but the name of the column must be mmsi.}

\item{search_into_radius_m}{radius (kilometer) where the MMSIs are extracted and returned.}

\item{duplicate_time}{if TRUE, extend (and duplicate) the data to past timestamps, to investigate the past presence of vessels at the data locations: extend the data timestamps up to "max_time_diff" number of seconds before the timestamps, by steps of "t_gap" number of seconds.}

\item{max_time_diff}{if duplicate_time = TRUE, extend (and duplicate) the data to past timestamps, to investigate the past presence of vessels at the data locations: extend the data timestamps up to "max_time_diff" number of seconds before the timestamps, by steps of "t_gap" number of seconds.}

\item{t_gap}{see "max_time_diff". Is also used as the number of seconds before and after the data timestamps where vessels are considered for extraction (otherwise other AIS data are filtered out).}

\item{accelerate}{if TRUE, data timestamps are averaged at "average_at" seconds to decrease the number of data timestamp to process and  strongly decrease the computation time.}

\item{average_at}{if accelerate = TRUE, the data timestamps are approximated to within to "average_at" number of seconds. This, to decrease the number of data timestamps to process. Necessary for large data timestamps to extract. Is also used as the number of seconds before and after the data timestamps where vessels are considered for extraction, in addition to "t_gap" parameter (otherwise other AIS data are filtered out).}
}
\value{
return the input data with the AIS extracted merged in the dataframe: each line of input data is duplicated by timestamp to extract (every "t_gap" number of seconds up to "max_time_diff" number of seconds). All these lines are duplicated for each MMSI present in the area at the moment of the extraction. If no AIS are present in the radius at this moment, the columns dedicated to AIS data are filled with NA, so that no input data and no timestamp to extract is lost.
The output dataframe contains the columns of the input data, the columns of the AIS data (with "ais_" as prefix if the same column is already present in the input data), and the following columns:
\itemize{
\item distance_effort_ais_m: distance (meters) between the data location and the MMSI at this time (filled with NA if no MMSI).
\item timestamp_AIS_to_extract: timestamp for the extraction of the AIS (approximated with "average_at" number of seconds if accelerate = TRUE).
\item diffTime_AIS_extraction_effort: difference (in seconds) between the timestamp to extract (timestamp_AIS_to_extract) and the real data timestamp.
\item datetime_AIS_to_extract: datetime of timestamp_AIS_to_extract.
\item diffTime_AIS_effort: difference, in seconds, between the AIS data and the data timestamp: can be different from the difference between the timestamp of the extraction and the real data timestamp (diffTime_AIS_extraction_effort) due to the parameter "average_at" & "t_gap"}
}
\description{
Extract the AIS position around the locations and at the time of the data
}
\examples{
\dontrun{
data("ais")
data("point_to_extract")

library(dplyr)
library(lubridate)
point_to_extract <- point_to_extract \%>\%
  mutate(timestamp = as.numeric(ymd_hm(datetime)))
ais <- ais \%>\%
  mutate(timestamp = as.numeric(ymd_hms(datetime))) \%>\%
  AIStravel(ais_data = .,
            time_stop = 5*60*60,
            mmsi_time_to_order = T,
            return_sf = F,
            return_3035_coords = F) \%>\%
  AISinterpolate_at(data = point_to_extract,
                  ais_data = .,
                  mmsi_time_to_order = T,
                  load_existing_files = T,
                  save_AISinterlate_at = T,
                  overwrite = F,
                  file_AISinterlate_at = "AISinterpolate_at",
                  radius = 200000,
                  time_stop = 5*60*60,
                  correct_speed = T,
                  threshold_speed_to_correct = 100,
                  filter_station = T,
                  filter_high_speed = T,
                  parallelize = F)

#' AISextract(data = point_to_extract,
           ais_data = ais,
           search_into_radius_m = 50000,
           duplicate_time = F,
           max_time_diff = 0,
           t_gap = 10*60,
           accelerate = F,
           average_at = 0)}
}
