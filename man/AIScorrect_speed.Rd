% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/02c_AIScorrect_speed.R
\name{AIScorrect_speed}
\alias{AIScorrect_speed}
\title{Correct GPS errors and delays from AIS data}
\usage{
AIScorrect_speed(
  ais_data,
  mmsi_time_to_order = T,
  threshold_speed_to_correct = 100,
  threshold_speed_to_correct_expr = function(speed_kmh) {
    
    return((median(speed_kmh[speed_kmh > 1], na.rm = T) + sd(speed_kmh[speed_kmh > 1 &
    speed_kmh < quantile(speed_kmh[speed_kmh > 1], 0.75)]) * 5 + 15))
 },
  time_stop = 5 * 60 * 60,
  nb_iteration = 10,
  nb_iteration_successive_strange = 100,
  correct_high_speed_craft = F,
  quantile_station = 0.975,
  threshold_distance_station = 10,
  quantile_high_speed = 0.97,
  threshold_high_speed = 110
)
}
\arguments{
\item{ais_data}{AIS data. Must contain a column: timestamp (number of seconds since January 1, 1970 (the Unix epoch): see https://r-lang.com/how-to-convert-date-to-numeric-format-in-r/ for transformation), and the columns lon (longitude), lat (latitude) and mmsi (Maritime mobile service identity). timestamp, lon and lat must be numeric. The mmsi column is the identifier for the vessels, the values can be replaced by the IMO or another identifier, but the name of the column must be mmsi.}

\item{mmsi_time_to_order}{if MMSI and timestamps are not yet arranged as dplyr::arrange(AIS data, mmsi, timestamp), must be TRUE. We recommand to put it as TRUE by precaution. Important to prevent large errors.}

\item{threshold_speed_to_correct}{speeds higher than this threshold are corrected if the mmsi is not an aircraft and if correct_speed = T}

\item{threshold_speed_to_correct_expr}{expression (function having "speed_kmh" as unique parameter) to determine another threshold correcting GPS errors and delays. This expression is ran for each MMSI individually, allowing to identify unrealistic speeds based on the mean of the vessel speed, median, standard deviation or other functions. The default expression has been tested as relevant and appropriate to filter GPS errors and delays, still checks are necessary.}

\item{time_stop}{number of seconds before and after the AIS signal were the vessel track is not calculated/interpolated anymore if there is not another AIS signal meanwhile. Filter also AIS data too long before and after that are not of interest, to accelerate a lot the process.}

\item{nb_iteration}{number of iteration re-estimating the GPS errors. Low number (10 as default) is prefered in case GPS error is inherent and can not be deleted: in this case, the script will continue to delete points until nb_iteration is reached.}

\item{nb_iteration_successive_strange}{number of iterations where GPS delays are looked backwards. 100 as default. Is the number of possible subsequent GPS lag.}

\item{correct_high_speed_craft}{if speeds from high speed craft (specially used for aircraft) must be corrected as well.}
}
\value{
Return the AIS data with identified GPS error or GPS delay removed. The vessel speeds are corrected, as well as the distance and time travelled. Contains columns:
\itemize{
\item speed_kmh_corrected: if TRUE, the speed of the line has been corrected.
\item time_travelled: number of seconds since the last reception or interpolation of an AIS signal (0 if first reception).
\item distance_travelled: distance travelled (meters) since the last reception or interpolation of an AIS signal (0 if first reception).
\item speed_kmh: speed (km/h) of the vessels since the last reception or interpolation of an AIS signal.
\item station: if the MMSI is a station or not.
\item high_speed: if the MMSI is a high speed craft (used for aircraft) or not.}
}
\description{
Correct the errors due to GPS delays or errors and leading to erroneous speeds (km/h), distance or time travelled by MMSI (vessel). The corrections are made according to different input parameters. Other important parameters are used in the function to detect GPS errors, and are not in the parameters of the function for simplicity. However these can be added on request for more flexibility in the filters
}
\examples{
\dontrun{
data("ais")

AIScorrect_speed(ais_data,
                 mmsi_time_to_order = T,
                 threshold_speed_to_correct = 100,
                 time_stop = 5*60*60)}
}
